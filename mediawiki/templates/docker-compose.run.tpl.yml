{% set var_local = params.local | bool %}

{################################################################################################}
{% macro include_scripts() %}

    - "./run:{{ params.inner_scripts_dir }}/run:ro"
    - "./env/vars.inner.sh:{{ params.inner_scripts_dir }}/vars.sh:ro"
    - "./main/scripts:{{ params.inner_scripts_dir }}/main/scripts:ro"
    - "./shared/scripts:{{ params.inner_scripts_dir }}/shared/scripts:ro"
    - "./{{ params.main_real_dir }}/scripts:{{ params.inner_scripts_dir }}/{{ params.main_real_dir }}/scripts:ro"

{% endmacro %}
{################################################################################################}

version: "2.4"

x-logging:

  {#############################################################}
  {% if params.use_fluentd | bool %}

  mainlog: &mainlog
    driver: "fluentd"
    options:
      tag: "{% raw %}container.{{.Name}}{% endraw %}"
      fluentd-address: "localhost:{{ params.fluentd_port }}"
  jsonlog: &jsonlog
    driver: "json-file"
    options:
      max-size: "50m"

  {% else %}

  mainlog: &mainlog
    driver: "json-file"
    options:
      max-size: "50m"

  {% endif %}
  {#############################################################}

networks:
  shared:
    external: true
    name: "{{ params.shared_network }}"

services:

  {#############################################################}
  {% if (params.pod_type in ['app', 'web']) and (params.use_certbot | bool) %}

  certbot:
    container_name: "${CTX_PREFIX_RUN}certbot"
    hostname: "certbot"
    build:
      context: .
      dockerfile: "shared/containers/certbot/Dockerfile"
      args:
        IMAGE: "{{ params.images.certbot }}"
    networks:
    - "shared"

    {#############################################################}
    {% if var_local %}

    extra_hosts:
      host.docker.internal: host-gateway

    {% endif %}
    {#############################################################}

    volumes:
    - "$DATA_DIR/sync/certbot/etc/:/etc/letsencrypt/"
    - "$DATA_DIR/sync/certbot/www/:/var/www/certbot/"

    {{ include_scripts() }}

    logging: *mainlog

    {#############################################################}
    {% if (params.memory.certbot | default('')) != '' %}

    mem_limit: "{{ params.memory.certbot }}"

    {% endif %}
    {#############################################################}

  {% endif %}
  {#############################################################}

  {#############################################################}
  {% if params.pod_type in ['web'] %}

  mysql_cli:
    container_name: "${CTX_PREFIX_RUN}mysql_cli"
    hostname: "mysql_cli"
    build:
      context: .
      dockerfile: "shared/containers/mysql/cli.dockerfile"
      args:
        IMAGE: "{{ params.images.mysql }}"
    networks:
    - "shared"

    {#############################################################}
    {% if var_local %}

    extra_hosts:
      host.docker.internal: host-gateway

    {% endif %}
    {#############################################################}

    volumes:

    {{ include_scripts() }}

    {#############################################################}
    {% if params.use_secrets | bool %}

    - "./env/mysql/.my.cnf:/root/.my.cnf:ro"

    {% endif %}
    {#############################################################}

    - "$DATA_DIR/tmp/mysql:/tmp/main/mysql"
    logging: *mainlog

    {#############################################################}
    {% if (params.memory.mysql_cli | default('')) != '' %}

    mem_limit: "{{ params.memory.mysql_cli }}"

    {% endif %}
    {#############################################################}

  {% endif %}
  {#############################################################}

  logrotator:
    container_name: "${CTX_PREFIX_RUN}logrotator"
    hostname: "logrotator"
    build:
      context: .
      dockerfile: "shared/containers/python3/Dockerfile"
      args:
        IMAGE: "{{ params.images.logrotator }}"
    restart: "unless-stopped"
    networks:
    - "shared"

    {#############################################################}
    {% if var_local %}

    extra_hosts:
      host.docker.internal: host-gateway

    {% endif %}
    {#############################################################}

    volumes:
    - "$DATA_DIR:/var/main/data"
    - "$DATA_DIR/tmp:/tmp/main"
    - "$DATA_DIR/log:/var/log/main"
    logging: *mainlog
    command: python3 /bin/logrotate.py /tmp/main/log /var/log/main/rotated

    {#############################################################}
    {% if (params.memory.logrotator | default('')) != '' %}

    mem_limit: "{{ params.memory.logrotator }}"

    {% endif %}
    {#############################################################}
